name: Build

on: [push, pull_request]

jobs:
 
  build-macos:
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v2
      - name: Install dependencies
        run: |
          brew install fltk pixman ffmpeg
      - name: Configure
        run: cmake -DCMAKE_BUILD_TYPE=Debug -DENABLE_H264=ON -S . -B build
      - name: Build
        working-directory: build
        run: make
      - name: Install
        working-directory: build
        run: make dmg
      - name: Pack project # This would actually build your project, using zip for an example artifact
        run: |
          zip /tmp/TigerVNC*/*.dmg
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false
      - name: Upload Release Asset
        id: upload-release-asset 
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
          asset_path: ./my-artifact.zip
          asset_name: my-artifact.zip
          asset_content_type: application/zip

  build-java:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        java: [ '8', '11', '16' ]
    steps:
      - uses: actions/checkout@v2
      - name: Setup java
        uses: actions/setup-java@v2
        with:
          distribution: 'temurin'
          java-version: ${{ matrix.java }}
      - name: Configure
        working-directory: java
        run: cmake -DCMAKE_BUILD_TYPE=Debug -S . -B build
      - name: Build
        working-directory: java/build
        run: make

  build-packages:
    strategy:
      matrix:
        target:
          - centos8
          - centos7
          - bionic
          - focal
      fail-fast: false
    runs-on: ubuntu-latest
    env:
      DOCKER: ${{ matrix.target }}
    steps:
      - uses: actions/checkout@v2
      - name: Build image
        run: docker build -t tigervnc/$DOCKER .github/containers/$DOCKER
      - name: Build packages
        run: .github/containers/$DOCKER/build.sh
